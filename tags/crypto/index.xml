<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>crypto on</title><link>https://kb.wongssh.cf/tags/crypto/</link><description>Recent content in crypto on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://kb.wongssh.cf/tags/crypto/index.xml" rel="self" type="application/rss+xml"/><item><title>DES</title><link>https://kb.wongssh.cf/crypto/AES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kb.wongssh.cf/crypto/AES/</guid><description>加密 AES要求密钥长度为128位，具体加密流程图如下：
上图展示了AES加密的整体流程，接下来，我们简单介绍每一层的作用：
密钥加法层 使用密钥编排得到的子密钥与输入明文$x$进行XOR异或计算 字节代换层 使用具有特殊数学性质的查找表对数据进行非线性变换，保证对单个状态的修改可以迅速传播到整个数据路径中 扩散层 ShiftRows 行移位变化 在位级别进行数据置换 MixColumn 列混淆变化是一个[[crypto/concept/混淆与扩散#混淆（Confusion）|混淆]]操作，合并了长度为 4 字节的分组 一个更具可视化的展示图如下：</description></item><item><title>DES</title><link>https://kb.wongssh.cf/crypto/DES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kb.wongssh.cf/crypto/DES/</guid><description>[!warning] 警告
DES算法在目前已经不具有安全性，我们可以使用硬件快速爆破DES密钥。且DES在加密效率上只有高效的硬件实现而没有高效的软件实现，不推荐在现代基础设施上使用此加密算法。
本页面主要介绍DES算法，DES是一种使用 56 位密钥(实际上，我们一般看到 64 位的密钥中有 8 位校验位无法参与加密)对 64 位长分组进行加密的密码。
加密 其具体加密给出的流程图如下:
上述步骤可用文字表述如下:
明文被分解成以 64 bit 为一组的数据 将 64 bit 为一组的明文 $x$ 使用 [[crypto/concept/初始置换与逆置换|初始置换]] $IP(x)$ 进行处理 将置换后的结果分为左右两部分，每一部分长度为 32 bit，分别记为$L_0$、$R_0$ 将右侧 $L_0$ 部分(32 bit) 与经过 [[crypto/concept/DES密钥编排|密钥编排]](Key schedule) 后的 48 bit 密钥输入 f 函数 将 [[crypto/concept/F函数|f函数]] 输出结果与左侧$R_0$进行异或获得的结果记为$R_1$ 将原有输入 $R_0$ 直接记为 $L_1$ 我们将上述 3 - 6 步流程重复 16 轮，最后获得结果进行 [[crypto/concept/初始置换与逆置换|初始逆置换]]输出密文。</description></item><item><title>密码学根节点</title><link>https://kb.wongssh.cf/crypto/root/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kb.wongssh.cf/crypto/root/</guid><description>本文为密码学根节点，包含以下内容:
[[crypto/DES|DES]] [[crypto/AES|AES]] RSA 本节点在写作过程中，主要参考了以下书目:
《深入浅出密码学》 《图解密码学技术》</description></item></channel></rss>